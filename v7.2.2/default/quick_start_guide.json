{
  "workbook": {
    "metadata": {
      "revision": 20230621,
      "example_id": "9289ad70-5667-11ed-b4f2-d95bad9d0083",
      "features": [
        "Kafka ingest",
        "S3 ingest",
        "Geospatial joins",
        "Location analytics",
        "Alerts"
      ],
      "approx_time": "15 mins",
      "legacy_name": "quick_start_guide",
      "thumbnail": "https://kinetica-workbench.s3.amazonaws.com/workbooks/examples/quick_start_guide.png"
    },
    "config": {
      "chatgpt_context": [
        {
          "table": "taxi_data_historical",
          "description": "This table contains historical information about taxi trips in New York. Each row contains the trip starting (pickup) and and ending (drop off) latitudes and longitudes, the total fare, and other details about the trip.",
          "rules": "Use ST_INTERSECTS, ST_CONTAINS etc to identify spatial relationships between lat and long points and a geom,\nAssume ST_MAKEPOINT() uses SRID 4326 by default and returns the geometry type, \nDo not use the ST_SetSRID() function,\nDo not user the ST_DistanceSphere() function use ST_DWITHIN() instead,\nSpaces not allowed in column alias use underscore as a separator instead for instance \"Starting Neighborhood\" is not allowed use \"starting_neighborhood\" instead,\nUse the corresponding NTA neighborhood geom for a known location like JFK airport when identifying spatial relationships,\nFollowing is applicable if a known location is not an NTA neighborhood in NYC Don't equate a drop off or pickup latitude with the latitude or longitude of a known location instead create a buffer around the known location to see if if the pickup or drop off point is contained within the buffer alternatively you could also use a function like ST_DWithin,\nUse functions like HOUR(expr) DAY(expr) etc to extract the hour day year minute second of date time expressions"
        },
        {
          "table": "nyct2020",
          "description": "This table contains the Neighborhood Tabulation Area geoms and names.",
          "rules": "Use the nyct2020 table when you need to calculate aggregate statistics for different neighborhoods,\nUse full names of neighborhoods for instance John F. Kennedy International Airport instead of JFK Airport\n"
        }
      ]
    },
    "id": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9",
    "name": "Quick Start Guide",
    "description": "Get started with Kinetica.",
    "user_id": "9f8c9d70-b647-11ee-9176-c7c8ea7d66a6",
    "warehouse_id": null,
    "is_example": true,
    "is_shared": false,
    "created_at": "2021-02-11T20:17:17.458Z",
    "updated_at": "2024-01-19T13:43:53.830Z",
    "userId": "9f8c9d70-b647-11ee-9176-c7c8ea7d66a6"
  },
  "worksheets": [
    {
      "config": {
        "chat_messages": []
      },
      "id": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
      "name": "START HERE",
      "description": "Description for Sheet 1",
      "previous_worksheet_id": null,
      "next_worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
      "workbook_id": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9",
      "created_at": "2021-02-11T20:17:17.519Z",
      "updated_at": "2024-01-19T13:32:47.743Z",
      "workbookId": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9"
    },
    {
      "config": {
        "contexts": [
          {
            "context_name": "ki_home.nta_ctx"
          },
          {
            "context_name": "ki_home.nyctaxi_ctx"
          }
        ],
        "chat_messages": []
      },
      "id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
      "name": "1. Set up data and context",
      "description": "Description for sheet 2",
      "previous_worksheet_id": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
      "next_worksheet_id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
      "workbook_id": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9",
      "created_at": "2022-09-14T15:51:22.664Z",
      "updated_at": "2024-01-19T13:33:34.766Z",
      "workbookId": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9"
    },
    {
      "config": {
        "contexts": [
          {
            "context_name": "ki_home.nta_ctx"
          },
          {
            "context_name": "ki_home.nyctaxi_ctx"
          }
        ]
      },
      "id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
      "name": "3. Explore the data",
      "description": "Description for sheet 3",
      "previous_worksheet_id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
      "next_worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
      "workbook_id": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9",
      "created_at": "2022-09-14T17:25:13.631Z",
      "updated_at": "2024-01-19T13:32:47.534Z",
      "workbookId": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9"
    },
    {
      "config": {
        "contexts": [
          {
            "context_name": "ki_home.nta_ctx"
          },
          {
            "context_name": "ki_home.nyctaxi_ctx"
          }
        ]
      },
      "id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
      "name": "4. Location analytics",
      "description": "Description for sheet 5",
      "previous_worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
      "next_worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
      "workbook_id": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9",
      "created_at": "2022-09-14T20:31:40.759Z",
      "updated_at": "2024-01-19T13:32:47.541Z",
      "workbookId": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9"
    },
    {
      "config": {
        "contexts": [
          {
            "context_name": "ki_home.nta_ctx"
          },
          {
            "context_name": "ki_home.nyctaxi_ctx"
          }
        ]
      },
      "id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
      "name": "5. Real time alerting",
      "description": "Description for sheet 8",
      "previous_worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
      "next_worksheet_id": "3bd67520-b6cf-11ee-a8f4-ab54b76e6fc9",
      "workbook_id": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9",
      "created_at": "2022-09-20T02:34:14.433Z",
      "updated_at": "2024-01-19T13:32:47.548Z",
      "workbookId": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9"
    },
    {
      "config": {
        "contexts": [
          {
            "context_name": "ki_home.nta_ctx"
          },
          {
            "context_name": "ki_home.nyctaxi_ctx"
          }
        ]
      },
      "id": "3bd67520-b6cf-11ee-a8f4-ab54b76e6fc9",
      "name": "6. Other capabilities",
      "description": "Description for sheet 8",
      "previous_worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
      "next_worksheet_id": null,
      "workbook_id": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9",
      "created_at": "2022-09-20T19:23:06.061Z",
      "updated_at": "2024-01-19T13:32:47.554Z",
      "workbookId": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9"
    },
    {
      "config": {
        "contexts": [
          {
            "context_name": "ki_home.nta_ctx"
          },
          {
            "context_name": "ki_home.nyctaxi_ctx"
          }
        ]
      },
      "id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
      "name": "2. SQL-GPT",
      "description": "Description for sheet 7",
      "previous_worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
      "next_worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
      "workbook_id": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9",
      "created_at": "2023-04-25T19:27:56.887Z",
      "updated_at": "2024-01-19T13:32:47.561Z",
      "workbookId": "3b5cb140-b6cf-11ee-a8f4-ab54b76e6fc9"
    }
  ],
  "blockMap": {
    "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {},
        "id": "3b605ac0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"HOW TO USE WORKBOOKS\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Workbooks are organized into worksheets. Worksheets are handy for organizing your work by separating the different sections of your analysis. Each worksheet contains blocks of code, text and media content. You can either execute all the code in a sheet by clicking on the \\\"Run All\\\" button or by running each individual block on it own. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"RUN WORKSHEETS SEQUENTIALLY\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"All example workbooks use worksheets to sequentially order the code. This means that some of the code in later worksheets will rely on tables or views that may have been created in previous worksheets. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"CREATE YOUR WORKBOOK\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Use the Copy and Edit button on the top right to create a local copy of this workbook to work through the exercises. You can rename the workbook and edit it once copied. Your workbook can be found in the Expore section on the top. Select it now to continue this workbook.\"}]}]",
        "previous_block_id": "3b65b1f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T20:52:45.869Z",
        "updated_at": "2024-01-19T13:32:46.615Z",
        "worksheetId": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b61ba50-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"🚀 WHAT IS KINETICA\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica is a database, purpose built for real-time analytics at scale. It leverages vectorized memory-first architecture with kernels that have been custom built for over a decade to deliver blistering performance at scale on significantly less infrastructure than traditional data warehouses. Using a highly-distributed, lockless design, Kinetica enables simultaneous ingestion and analysis with integrated geospatial, graph, SQL, and AI/ML capabilities. With out of the box connectors for ingest and egress, native language bindings and a rich API ecosystem, developers can leverage the tools that they are comfortable and familiar with to build and deploy advanced analytical applications.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"tl;dr;\",\"bold\":true},{\"text\":\" We are a really fast, easy to use database for real-time analytics on massive amounts of streaming data. You can use us for many things but we excel at enabling decisioning systems that require insights in seconds rather than minutes or hours.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"QUICKSTART WORKBOOK\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"This workbook is an introduction to loading data into Kinetica, performing analytics and triggering alerts in real time. \"}]}]",
        "previous_block_id": "3b6319e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b65b1f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-16T18:53:00.318Z",
        "updated_at": "2024-01-19T13:32:46.629Z",
        "worksheetId": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b6319e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "{}",
        "previous_block_id": null,
        "next_block_id": "3b61ba50-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "d7d34b22-2aa2-484f-9e8e-106f62612caf",
        "worksheet_id": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-16T18:53:06.951Z",
        "updated_at": "2024-01-19T13:32:46.635Z",
        "worksheetId": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "d7d34b22-2aa2-484f-9e8e-106f62612caf"
      },
      {
        "config": {},
        "id": "3b65b1f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "{}",
        "previous_block_id": "3b61ba50-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b605ac0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "016d9471-1913-4c85-894a-101e82909fd3",
        "worksheet_id": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-16T18:57:09.157Z",
        "updated_at": "2024-01-19T13:32:46.655Z",
        "worksheetId": "3b5f2240-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "016d9471-1913-4c85-894a-101e82909fd3"
      }
    ],
    "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {},
        "id": "3b6f75f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block 1",
        "description": "Description for Block 1",
        "content": "\"-- Register a streaming kafka data source\\nDROP TABLE IF EXISTS taxi_data_streaming;\\n\\n-- Create the credentials for connecting to the Kafka Cluster. This step is optional since credentials can be specified when creating a data source.\\nCREATE OR REPLACE CREDENTIAL qs_creds\\nTYPE = 'confluent',\\nIDENTITY = '' ,\\nSECRET = ''\\nWITH OPTIONS (  \\n   'security.protocol' = 'SASL_SSL',\\n   'sasl.mechanism' = 'PLAIN',\\n   'sasl.username' = 'QZN62QB2RBTLW74L',\\n   'sasl.password' = 'iiJDdKeBzf5ms5EInLvpRslW1zwsTYx9tjZ1pQyVoS+gPGkyNms6eMXPaR6y+GST'\\n);\\n\\n-- Create the data source. Each kafka topic is created as a separate data source.\\nCREATE OR REPLACE DATA SOURCE taxi_streaming_ds\\nLOCATION = 'confluent://pkc-ep9mm.us-east-2.aws.confluent.cloud:9092'\\nWITH OPTIONS \\n(\\n    kafka_topic_name =  'qs_taxi',\\n    credential = 'qs_creds'\\n)\"",
        "previous_block_id": "3b759070-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b7dcdd0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T15:51:22.814Z",
        "updated_at": "2024-01-19T13:33:47.659Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b72f860-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"bold\":true,\"text\":\"LOAD DATA INTO KINETICA\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica can load data from 100s of data sources using native connectors (Azure, GCS, HDFS, S3, Kafka) or JDBC. Kinetica has partnered with CData - a data connectivity platform that provides and maintains JDBC drivers for 100s of databases and applications. You can use these drivers for free to connect to popular databases like PostGres and applications like Salesforce and Google Drive.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Try out our data ingest guide for a full introduction to loading data into Kinetica: https://docs.kinetica.com/latest/load_data/concepts/\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"✌🏽2 STEPS TO CONNECT\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"For most cases, loading data into Kinetica involves just two queries.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"1.\"},{\"text\":\" Create the Data Source\",\"bold\":true},{\"text\":\": This query establishes a connection with a data source using the specified location, credentials and any other additional parameters.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"2.\"},{\"text\":\" Load Data\",\"bold\":true},{\"text\":\": This query loads data from a particular data source into Kinetica\"}]}]",
        "previous_block_id": null,
        "next_block_id": "3b759070-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T15:55:47.440Z",
        "updated_at": "2024-01-19T13:32:46.847Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b759070-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"REGISTER A STREAMING DATA SOURCE\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"This stream contains synthetic taxi pickups and drop-offs from a Kafka queue (up to the past hour). The ability to ingest streaming data and build always-on complex analytical pipelines on top of them is one of Kinetica's many differentiating features.\"}]}]",
        "previous_block_id": "3b72f860-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b6f75f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T16:09:58.845Z",
        "updated_at": "2024-01-19T13:32:46.854Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b782880-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"\"",
        "previous_block_id": "3b7b83e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T16:13:29.636Z",
        "updated_at": "2024-01-19T13:32:46.860Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b7b83e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"Import Historical Data\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"For this guide, we'll use several files with geospatial data in them. The nyct2010.csv file provides geospatial boundaries for neighborhoods in New York. The taxi_data_historical.parquet file provides a list of taxi pickups and dropoffs in New York.\"}]}]",
        "previous_block_id": "3b6f75f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b782880-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T16:13:32.397Z",
        "updated_at": "2024-01-19T13:32:46.867Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b7dcdd0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"REGISTER AN S3 BUCKET AS A DATA SOURCE\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"For this guide, we'll use several files with historical geospatial data in them. The nyct2010.csv file provides geospatial boundaries for neighborhoods in New York. The taxi_data_historical.parquet file provides a list of taxi pickups and dropoffs in New York.\"}]}]",
        "previous_block_id": "3b6f75f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b7f2d60-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T16:31:18.831Z",
        "updated_at": "2024-01-19T13:32:46.873Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b7f2d60-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Register an S3 bucket that contains historical data\\nCREATE OR REPLACE DATA SOURCE quickstart\\nLOCATION = 'S3'\\nWITH OPTIONS (\\n    ANONYMOUS = 'true',\\n    BUCKET NAME = 'kinetica-examples-data-public',\\n    REGION = 'us-east-1'\\n);\"",
        "previous_block_id": "3b7dcdd0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b819e60-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T16:31:52.850Z",
        "updated_at": "2024-01-19T13:32:46.880Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b8065e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Load the streaming data into Kinetica\\nLOAD DATA INTO taxi_data_streaming\\nFORMAT JSON\\nWITH OPTIONS (\\n    DATA SOURCE = 'taxi_streaming_ds',\\n    SUBSCRIBE = 'TRUE',\\n    ERROR_HANDLING = 'permissive',\\n    kafka_subscription_cancel_after = 120 -- cancels the stream after 120 minutes\\n);\"",
        "previous_block_id": "3b819e60-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b82fdf0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T17:13:03.419Z",
        "updated_at": "2024-01-19T13:32:46.886Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b819e60-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"LOAD THE DATA INTO TABLES\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica has a robust type inferencing system that allows you to load data into a table without defining it. \"}]}]",
        "previous_block_id": "3b7f2d60-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b8065e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T17:13:07.436Z",
        "updated_at": "2024-01-19T13:32:46.893Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b82fdf0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Create the neighborhoods table\\nCREATE OR REPLACE TABLE \\\"nyct2020\\\"\\n(\\n    \\\"gid\\\" INTEGER (primary_key) NOT NULL,\\n    \\\"geom\\\" GEOMETRY NOT NULL,\\n    \\\"BoroCode\\\" VARCHAR (8) NOT NULL,\\n    \\\"BoroName\\\" VARCHAR (16) NOT NULL,\\n    \\\"CountyFIPS\\\" VARCHAR (8) NOT NULL,\\n    \\\"NTACode\\\" VARCHAR (16) NOT NULL,\\n    \\\"NTAName\\\" VARCHAR (64) NOT NULL,\\n    \\\"NTAAbbrev\\\" VARCHAR (16) NOT NULL,\\n    \\\"NTAType\\\" VARCHAR (8) NOT NULL,\\n    \\\"CDTA2020\\\" VARCHAR (8) NOT NULL\\n);\\n\\n-- Load the NYC neighborhood map into Kinetica\\nLOAD DATA INTO nyct2020 \\nFROM FILE PATHS 'quickstart/nyct2020.csv'\\nFORMAT TEXT \\nWITH OPTIONS (\\n    DATA SOURCE = 'quickstart'\\n);\"",
        "previous_block_id": "3b8065e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b843670-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T17:15:06.302Z",
        "updated_at": "2024-01-19T13:32:46.899Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b843670-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Create the historical data table\\nCREATE OR REPLACE TABLE \\\"taxi_data_historical\\\"\\n(\\n    \\\"vendor_id\\\" VARCHAR (4),\\n    \\\"pickup_datetime\\\" DATETIME,\\n    \\\"dropoff_datetime\\\" DATETIME,\\n    \\\"passenger_count\\\" TINYINT,\\n    \\\"trip_distance\\\" REAL,\\n    \\\"pickup_longitude\\\" REAL,\\n    \\\"pickup_latitude\\\" REAL,\\n    \\\"rate_code_id\\\" SMALLINT,\\n    \\\"store_and_fwd_flag\\\" VARCHAR (32),\\n    \\\"dropoff_longitude\\\" REAL,\\n    \\\"dropoff_latitude\\\" REAL,\\n    \\\"payment_type\\\" VARCHAR (16),\\n    \\\"fare_amount\\\" REAL,\\n    \\\"surcharge\\\" REAL,\\n    \\\"mta_tax\\\" REAL,\\n    \\\"tip_amount\\\" REAL,\\n    \\\"tolls_amount\\\" REAL,\\n    \\\"total_amount\\\" REAL,\\n    \\\"cab_type\\\" TINYINT\\n);\\n\\n-- Load the historical trip data into Kinetica\\nLOAD DATA INTO taxi_data_historical\\nFROM FILE PATHS 'taxi_data.parquet'\\nFORMAT PARQUET\\nWITH OPTIONS (\\n    DATA SOURCE = 'quickstart'\\n);\"",
        "previous_block_id": "3b82fdf0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b86a770-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T17:15:11.602Z",
        "updated_at": "2024-01-19T13:32:46.906Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b856ef0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Context for the taxi data with a set of columns described\\nCREATE OR REPLACE CONTEXT nyctaxi_ctx\\n(\\n    TABLE = taxi_data_historical,\\n    COMMENT = 'This table contains historical information about taxi trips in New York. Each row contains the trip starting (pickup) and and ending (drop off) latitudes and longitudes, the total fare, and other details about the trip.',\\n    COMMENTS = \\n    (\\n        vendor_id = 'The identifiers for the 5 taxi companies (CMT, DDS, NYC, VTS, YCAB) operating in NYC.',\\n        pickup_datetime = 'The time at which a trip started.',\\n        dropoff_datetime = 'The time at which a trip ended',\\n        passenger_count = 'The number of passengers in a taxi for a particular trip.',\\n        trip_distance = 'The total distance in kilometers for a particular trip',\\n        payment_type = 'The mode use payment Cash, Credit, Dispute, No Charge, Unknown',\\n        surcharge = 'Additional charges applied to a particular trip'\\n\\n    ),\\n    RULES = \\n    (\\n        'Use ST_INTERSECTS, ST_CONTAINS etc to identify spatial relationships between lat and long points and a geom',\\n        'Assume ST_MAKEPOINT() uses SRID 4326 by default and returns the geometry type', \\n        'Do not use the ST_SetSRID() function',\\n        'Do not use the ST_DistanceSphere() function use ST_DWITHIN() instead',\\n        'Spaces not allowed in column alias use underscore as a separator instead for instance \\\"Starting Neighborhood\\\" is not allowed use \\\"starting_neighborhood\\\" instead',\\n        'Following is applicable if a known location is not an NTA neighborhood in NYC Do not equate a drop off or pickup latitude with the latitude or longitude of a known location instead create a buffer around the known location to see if if the pickup or drop off point is contained within the buffer alternatively you could also use a function like ST_DWithin',\\n        'Use functions like HOUR(expr) DAY(expr) etc to extract the hour day year minute second of date time expressions'\\n    )\\n);\"",
        "previous_block_id": "3b86a770-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b880700-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-11-02T18:55:44.621Z",
        "updated_at": "2024-01-19T13:32:46.913Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b86a770-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"CREATE CONTEXT OBJECTS\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Context objects are used to generate SQL using natural language (English) questions in Kinetica. Context objects describe tables and columns so that the LLM knows what to use when generating a SQL query. They can also be used to specify additional rules that can dictate how a query is constructed by the LLM. Finally, samples can be provided to the LLM for few shot training that is handy to train an LLM on particular syntax it might be unfamiliar with.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Click the configure button next to the SQLGPT prompt to add contexts objects that would be used to generate SQL.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"For more information on creating SQL-GPT context objects, see: https://docs.kinetica.com/7.2/sql/sqlgpt/#create-context\"}]}]",
        "previous_block_id": "3b843670-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b856ef0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-11-02T18:55:48.717Z",
        "updated_at": "2024-01-19T13:32:46.920Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b880700-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Create the context for the neighborhood table\\nCREATE OR REPLACE CONTEXT nta_ctx\\n(\\n    TABLE = nyct2020,\\n    COMMENT = 'This table contains the Neighborhood Tabulation Area (NTA) geoms and names for neighborhoods in New York City',\\n    COMMENTS = \\n    (\\n        gid = 'The primary key that identifies each row in this table',\\n        geom = 'The WKT that provides the spatial outline for each neighborhood',\\n        NTAName = 'The names of the different NTA neighborhoods.'\\n    )\\n    RULES = \\n    (\\n        'Use the nyct2020 table when you need to calculate aggregate statistics for different neighborhoods',\\n        'Use full names of neighborhoods for instance John F. Kennedy International Airport instead of JFK Airport',\\n        'Use the corresponding NTA neighborhood geom for a known location like JFK airport when identifying spatial relationships',\\n        'Never use the spatial coordinates of a neighborhood to identify it always the use the NTAName instead'\\n    )\\n)\"",
        "previous_block_id": "3b856ef0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-11-02T19:46:33.371Z",
        "updated_at": "2024-01-19T13:32:46.926Z",
        "worksheetId": "3b6e1660-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      }
    ],
    "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {},
        "id": "3b98a8d0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"table_schema\":\"\",\"table_name\":\"taxi_data_streaming\",\"geometry_type\":\"lon_lat\",\"longitude\":\"dropoff_longitude\",\"latitude\":\"dropoff_latitude\",\"renderType\":\"heatmap\",\"colormap\":\"jet\",\"blurRadius\":2,\"center_longitude\":-73.9342,\"center_latitude\":40.7931,\"zoom_level\":10.920327459619147,\"opacity\":70,\"title\":\"\",\"block_height\":535,\"overrides\":\"\",\"auto_refresh_interval\":2,\"basemap_style\":\"grayscale\"}]",
        "previous_block_id": "3b99e150-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3ba37e40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T17:25:58.726Z",
        "updated_at": "2024-01-19T13:32:47.019Z",
        "worksheetId": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      },
      {
        "config": {},
        "id": "3b99e150-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"VISUALIZE DATA\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"It is always useful to get a sense of the quality of the data and the type of analytical questions that might be interesting to answer before diver deeper into analyzing it.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Workbooks offer a few different ways to visualize your data. These include map blocks for geospatial data and built in chart types for non-geospatial data.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"MAP BLOCK\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"The map block visualizes the stream of taxi drop-offs. It is set to refresh periodically so that we can see new drop-offs as they show up.\"}]}]",
        "previous_block_id": "3b9f3880-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b98a8d0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T17:32:19.302Z",
        "updated_at": "2024-01-19T13:32:47.026Z",
        "worksheetId": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b9b19d0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"RELATIONSHIP BETWEEN TRIP DISTANCE AND TOTAL FARE\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Workbench offers several built in chart types (Bar, LIne, Pie and Scatter) that can be used to get a quick sense of non-geospatial data.  These are available only when we use a Select statement on workbench. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"▶︎ Run the query below to see a scatter plot to see the relationship between total fare and trip distance. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"TASK\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"✍︎ Try configuring a bar chart of your own for the summary statistics query that show the vendors on the the x axis and total trips on the y axis.\"}]}]",
        "previous_block_id": "3ba37e40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b9c5250-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T19:33:28.189Z",
        "updated_at": "2024-01-19T13:32:47.033Z",
        "worksheetId": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b9c5250-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"SELECT * FROM taxi_data_historical\"",
        "previous_block_id": "3b9b19d0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T19:33:41.349Z",
        "updated_at": "2024-01-19T13:32:47.040Z",
        "worksheetId": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3b9f3880-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"SELECT\\n    NVL(vendor_id, '<ALL VENDORS>') AS Vendor_Name,\\n    DECIMAL(MIN(trip_distance)) AS Shortest_Trip,\\n    DECIMAL(AVG(trip_distance)) AS Average_Trip,\\n    DECIMAL(MAX(trip_distance)) AS Longest_Trip,\\n    COUNT(*) AS Total_Trips\\nFROM taxi_data_historical\\nGROUP BY vendor_id;\"",
        "previous_block_id": "3ba0e630-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b99e150-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-19T16:22:43.701Z",
        "updated_at": "2024-01-19T13:32:47.046Z",
        "worksheetId": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3ba0e630-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"SUMMARY STATISTICS\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Calculating summary statistics is one of the first tasks when exploring a new dataset. The following query finds the shortest, average, and longest trip lengths for each vendor using the historical data.\"}]}]",
        "previous_block_id": "3ba21eb0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b9f3880-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-19T16:23:10.135Z",
        "updated_at": "2024-01-19T13:32:47.053Z",
        "worksheetId": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3ba21eb0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"THE DATA\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Typically, the first thing we want to do after loading data is to inspect the table. You can use either a SELECT statement or use the preview option on the context menu when you click on a data object. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"To preview using the UI: Go to the Data tab, the tables that were created in the previous worksheet are placed in your default schema (either ki_home or your username if you are using our SaaS version), click on them to bring up the context menu. The preview option will show the table while the WMS preview option (availabe for tables with Geospatial data) will show an option to configure a map. All the data is typically pre-filled for the map so you can click update to bring up a visual representation of the data as well. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"We will use three tables in this workbook\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"1. nyct2010: This table contains geospatial boundaries of neighborhoods in New York City (NYC) along with additional metadata about each of them.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"2. taxi_data_historical: This is historical information on the taxi trips in NYC. This includes information on pickup and dropoff points, trip time, fare etc.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"3. taxi_data_streaming: This table has the same schema as the historical data but instead of historical data it contains simulated data on taxi trips that are happening right now in NYC. New trips are added to the table as they occur.\"}]}]",
        "previous_block_id": null,
        "next_block_id": "3ba0e630-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-19T16:36:50.507Z",
        "updated_at": "2024-01-19T13:32:47.059Z",
        "worksheetId": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3ba37e40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"TASK\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"✍︎ Try configuring a map block below that uses the nyct2010 data. Use the + button on the top right of this block to add map a block below.\"}]}]",
        "previous_block_id": "3b98a8d0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3b9b19d0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T01:55:19.794Z",
        "updated_at": "2024-01-19T13:32:47.066Z",
        "worksheetId": "3b977050-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      }
    ],
    "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {},
        "id": "3badde80-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block 1",
        "description": "Description for Block 1",
        "content": "\"SELECT TOP 10\\n    n_dropoff.NTAName AS Neighborhood,\\n    COUNT(*) AS Total_Trips,\\n    DECIMAL(AVG(fare_amount)) AS Average_Fare\\nFROM\\n    taxi_data_historical t\\n    JOIN nyct2020 n_pickup\\n        ON STXY_Intersects(t.pickup_longitude, t.pickup_latitude, n_pickup.geom) = 1\\n        AND n_pickup.NTAName = 'John F. Kennedy International Airport'\\n    JOIN nyct2020 n_dropoff\\n        ON STXY_Intersects(t.dropoff_longitude, t.dropoff_latitude, n_dropoff.geom) = 1\\nGROUP BY Neighborhood\\nORDER BY Total_Trips DESC;\"",
        "previous_block_id": "3bb07690-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bb1af10-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T20:31:40.879Z",
        "updated_at": "2024-01-19T13:32:47.151Z",
        "worksheetId": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3baf1700-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"SELECT\\n    NTANAme AS \\\"Neighborhood\\\",\\n    all_npp AS \\\"All\\\",\\n    cmt_npp AS \\\"CMT\\\", nyc_npp AS \\\"NYC\\\", vts_npp AS \\\"VTS\\\", ycab_npp AS \\\"YCAB\\\"\\nFROM\\n(\\n    SELECT\\n        NTAName,\\n        IF (GROUPING(vendor_id) = 1, CAST ('ALL' as varchar(4)), vendor_id) AS vendor_name,\\n        COUNT(*) AS total_pickups,\\n        DECIMAL(SUM(IF(HOUR(pickup_datetime) BETWEEN 5 AND 19, 0, 1))) / COUNT(*) * 100 AS night_pickup_percentage\\n    FROM\\n        taxi_data_historical t\\n        JOIN nyct2020 n\\n            ON STXY_Intersects(t.pickup_longitude, t.pickup_latitude, n.geom) = 1\\n    WHERE pickup_datetime < '2019-01-01'\\n    GROUP BY\\n        NTAName,\\n        ROLLUP(vendor_id)\\n)\\nPIVOT\\n(\\n    MAX(total_pickups) AS tp,\\n    MAX(night_pickup_percentage) AS npp\\n    FOR vendor_name IN ('ALL', 'CMT', 'NYC', 'VTS', 'YCAB')\\n)\\nWHERE all_tp > 500 AND all_npp > 50\\nORDER BY all_npp DESC;\"",
        "previous_block_id": "3bb1af10-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bb61be0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T20:32:44.618Z",
        "updated_at": "2024-01-19T13:32:47.158Z",
        "worksheetId": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bb07690-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"bold\":true,\"text\":\"Q1: What were the 10 most frequent destination neighborhoods for JFK pickups, and on average, what did it cost to go there?\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"The taxi trips data does not contain information about the neighborhood where a pickup or dropoff happened. To find the answer to this question, we will need to perform a geo join of the trips data with the neighborhood map (nyct2010) using the STXY_INTERSECTS function. We can then group the data by the  neighborhood name to determine the total number of trips and average fare for a trip from JFK to that neighborhood.\"}]}]",
        "previous_block_id": "3bb77b70-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3badde80-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T20:32:47.287Z",
        "updated_at": "2024-01-19T13:32:47.164Z",
        "worksheetId": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bb1af10-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"Q2: For neighborhoods with more than 500 pickups, how many had more than half of their pickups at night and by what taxi vendor?\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"You can use neighborhood boundary data and pickup time to calculate in which NTA vendors were picking up passengers at night and display the results in a pivot table containing columns of percentages for all vendors and each individual vendor.\"}]}]",
        "previous_block_id": "3badde80-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3baf1700-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T20:33:18.475Z",
        "updated_at": "2024-01-19T13:32:47.171Z",
        "worksheetId": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bb2e790-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"SELECT\\n    RPAD(LPAD(CHAR2(HOUR(t.pickup_datetime)), 2, '0'), 5, ':00') AS \\\"Pickup_Hour\\\",\\n    COUNT(*) AS \\\"Total_Pickups\\\"\\nFROM\\n    taxi_data_historical t\\n    JOIN nyct2020 n\\n    ON STXY_Intersects(t.pickup_longitude, t.pickup_latitude, n.geom) = 1\\nWHERE\\n    NTAName = 'John F. Kennedy International Airport' AND\\n    pickup_datetime < '2019-01-01'\\nGROUP BY\\n    HOUR(t.pickup_datetime)\\nORDER BY\\n    1;\\n\"",
        "previous_block_id": "3bb61be0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T20:36:02.541Z",
        "updated_at": "2024-01-19T13:32:47.177Z",
        "worksheetId": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bb61be0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"Q3: How many pickups per hour were there at JFK International Airport?\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Using the STXY_Intersects function to determine which pickup points were located in the JFK International Airport neighborhood boundary, it’s simple to calculate the number of pickups per hour there were at JFK for all cab types. We've added a bar chart to visualize the results.\"}]}]",
        "previous_block_id": "3baf1700-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bb2e790-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-14T20:36:09.383Z",
        "updated_at": "2024-01-19T13:32:47.184Z",
        "worksheetId": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bb77b70-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"GEOSPATIAL ANALYTICS WITH KINETICA\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica was designed from the ground up for analysis and visualization of massive geospatial datasets. It natively supports points, shapes as WKT, tracks, and labels. There are over 130 geospatial functions that are available through SQL. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"In this sheet we will run through a few queries that show how to to use geospatial queries in Kinetica.\"}]}]",
        "previous_block_id": null,
        "next_block_id": "3bb07690-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-19T16:33:36.452Z",
        "updated_at": "2024-01-19T13:32:47.194Z",
        "worksheetId": "3baca600-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      }
    ],
    "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {},
        "id": "3bc202c0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block 1",
        "description": "Description for Block 1",
        "content": "\"CREATE OR REPLACE MATERIALIZED VIEW store_front_dropoffs\\nREFRESH EVERY 5 SECONDS \\nAS\\nSELECT \\n    DATETIME(dropoff_datetime) AS dropoff_datetime,\\n    dropoff_latitude, \\n    dropoff_longitude, \\n    vendor_id\\nFROM taxi_data_streaming\\nWHERE GEODIST(-73.992975, 40.736562, dropoff_longitude, dropoff_latitude) < 200 AND \\nTIMEBOUNDARYDIFF('MINUTE', dropoff_datetime, NOW()) < 10\\n;\"",
        "previous_block_id": "3bc49ad0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bcc6300-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T02:34:14.569Z",
        "updated_at": "2024-01-19T13:32:47.287Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bc36250-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"GENERATE REAL-TIME INSIGHTS WITH KINETICA\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica's vectorized engine can run complex queries really fast. We can use this speed to build materialized views that can be set to refresh so that we have an always-on system that can trigger insights and alerts whenever there is an event of interest.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Let's see this in action below.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"THE PROBLEM\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Say you own a restaurant close to Union Square in NYC. You are interested in marketing your menu and restaurant to people who are getting dropped off via cabs near your restaurant. But right now, you have no way of finding out when someone is dropped off next to your restaurant (unless you happen to see them as they are being dropped off). \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"THE SOLUTION\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"We can use Kinetica to set up an alert whenever a particular drop off location is within a certain distance of your store. When such as an event is detected, Kinetica will automatically send out an alert that includes information on the drop off point to your phone. You or one of your marketing agents can use this information to immediately step out and chat with the potential customer.\"}]}]",
        "previous_block_id": null,
        "next_block_id": "3bc49ad0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T02:34:46.435Z",
        "updated_at": "2024-01-19T13:32:47.294Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bc49ad0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"MATERIALIZED VIEWS\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Materialized views can be kept up to date using 4 modes - manual, on change, on query, or periodic. Here we will use the periodic option to select all the drop offs that are within 200 meters of your restaurant in the last 10 minutes. This query is refreshed every 5 seconds, so you will recieve an alert if there was a new dropoff in the last 5 seconds.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"✎ NOTE\",\"bold\":true},{\"text\":\": There is an element of chance for the query below, since it is not necessary that there are any dropoffs happening around the store at a given point time. So you might not see new dropoffs appear immediately.\"}]}]",
        "previous_block_id": "3bc36250-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bc202c0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T18:23:12.554Z",
        "updated_at": "2024-01-19T13:32:47.300Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bc5fa60-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "{\"table_schema\":\"\",\"table_name\":\"store_front_dropoffs\",\"geometry_type\":\"lon_lat\",\"longitude\":\"dropoff_longitude\",\"latitude\":\"dropoff_latitude\",\"renderType\":\"raster\",\"fillColor\":\"e63434ff\",\"pointSize\":7,\"center_longitude\":-73.9938,\"center_latitude\":40.7382,\"zoom_level\":15.700000000000001,\"opacity\":100,\"overrides\":\"\",\"auto_refresh_interval\":5,\"basemap_style\":\"color\"}",
        "previous_block_id": "3bc78100-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T18:31:53.586Z",
        "updated_at": "2024-01-19T13:32:47.307Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      },
      {
        "config": {},
        "id": "3bc78100-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"The map below will show the any dropoffs that are within 500 meters. It is set to update every 5 seconds, so new drop offs that satisfy the specified criteria will show up automatically.\"}]}]",
        "previous_block_id": "3bc202c0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bc5fa60-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T18:37:17.813Z",
        "updated_at": "2024-01-19T13:32:47.313Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bc8b980-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"SETTING UP AN ALERT\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Broadly speaking there are two ways to setup an alert using Kinetica. You could either push alerts via a webhook or your could stream them to a data sink (like Apache Kafka). For this example we will use a webhook. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"SEE EVENTS BEING STREAMED IN REAL TIME\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"For this illustration, we will use the latter to send records to a pipedream webhook and then hook that up to the following google spreadsheet: \"},{\"text\":\"https://bit.ly/3IWFLQA\",\"underline\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Copy the link above and paste in your browsers address bar to see taxi dropoff events within 200 meters of the store being detected in real time by Kinetica.\"}]}]",
        "previous_block_id": "3bcb2a80-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bc9f200-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T18:39:19.776Z",
        "updated_at": "2024-01-19T13:32:47.320Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bc9f200-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"CREATE STREAM dropoff_alert_webhook\\nON TABLE store_front_dropoffs\\nREFRESH ON CHANGE\\nWITH OPTIONS \\n(\\n    DESTINATION = 'https://eo8ebtcs7m354db.m.pipedream.net' \\n)\"",
        "previous_block_id": "3bc8b980-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T18:41:06.064Z",
        "updated_at": "2024-01-19T13:32:47.326Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bcb2a80-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"table_schema\":\"\",\"table_name\":\"store_front_dropoffs\",\"geometry_type\":\"lon_lat\",\"longitude\":\"dropoff_longitude\",\"latitude\":\"dropoff_latitude\",\"renderType\":\"raster\",\"fillColor\":\"db2498ff\",\"pointSize\":3,\"center_longitude\":-73.9796,\"center_latitude\":40.7373,\"zoom_level\":13.720000000000002,\"opacity\":76,\"title\":\"\",\"block_height\":535,\"overrides\":\"\",\"auto_refresh_interval\":5,\"basemap_style\":\"grayscale\"}]",
        "previous_block_id": "3bcc6300-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bc8b980-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T18:50:02.423Z",
        "updated_at": "2024-01-19T13:32:47.333Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      },
      {
        "config": {},
        "id": "3bcc6300-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"The map below shows the dropoffs that are within 200 meters of the store in the last 10 minutes. It is set to update every 5 seconds, so new dropoffs will automatically show up whenever they satisfy the criteria.\"}]}]",
        "previous_block_id": "3bc202c0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3bcb2a80-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T19:03:22.379Z",
        "updated_at": "2024-01-19T13:32:47.340Z",
        "worksheetId": "3bc0ca40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      }
    ],
    "3bd67520-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {},
        "id": "3bd7ada0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"So far we have just scratched the surface with regard to Kinetica's analytical capabilities. The topics listed below are some of the other capabilities that come with Kinetica.\"}]},{\"type\":\"paragraph\",\"children\":[{\"bold\":true,\"text\":\"GRAPH ANALYTICS\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica provides a generic and extensible library of graph functions that can be used to create, query, and solve graph network problems. These have applicatoins in areas such as transportation, utility, social, and geospatial. You can learn more about our graph capabilities here: https://docs.kinetica.com/7.2/graph_solver/network_graph_solver/#solvers\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"TIME ANALYTICS\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica has several functions that can be used with time series data. These include window operations, ASOF joins and date and time manipulation functions.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"MACHINE LEARNING\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica can be used to deploy analytical pipelines that include containerized ML models that take inputs from Kinetica tables and output back to tables in Kinetica.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"DASHBOARDS USING REVEAL\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica also offers a dashboarding tool called Reveal (see below) that is really useful for exploring your data. However, Reveal is not available on the free SaaS and developer edition of Kinetica.\"}]}]",
        "previous_block_id": null,
        "next_block_id": "3bd90d30-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bd67520-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T19:23:29.055Z",
        "updated_at": "2024-01-19T13:32:47.372Z",
        "worksheetId": "3bd67520-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3bd90d30-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "{}",
        "previous_block_id": "3bd7ada0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "016d9471-1913-4c85-894a-101e82909fd3",
        "worksheet_id": "3bd67520-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2022-09-20T19:34:01.263Z",
        "updated_at": "2024-01-19T13:32:47.396Z",
        "worksheetId": "3bd67520-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "016d9471-1913-4c85-894a-101e82909fd3"
      }
    ],
    "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {},
        "id": "3be06030-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"👆 START A CONVERSATION WITH YOUR DATA 👆\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"SQL-GPT allows you to write analytical questions in English to generate the corresponding SQL query. Your results depend on the type of prompts and the context that you provide GPT.  Click the configure button next to the SQLGPT prompt to add or change the contexts objects that would be used to generate SQL.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Paste a few of the sample prompts below into the prompt input (without --) above and click send. The query will be added below for you to execute ▶️. You will need to create a copy of this workbook to edit the queries (the button next to Share on the top right). Once you are ready, try out a few prompts of your own. \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"-- How many trips did each taxi vendor make to JFK airport? \"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"-- Use HOUR() and then summarize to find the total number of people who were dropped off at JFK for 1:00, 2:00, 3:00 and so on till 23:00\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"-- Which neighborhoods do people travel between the most in taxies? Do not include trips within the same neighborhood. Include the count of trips and the average distance and fare.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"-- On average passengers from which neighborhoods tip taxi drivers the most in NYC? Calculate tips as a percentage of the total fare amount and only include neighborhoods that had at least 20 or more trips.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"🧪 Note\",\"bold\":true},{\"text\":\": This is an experimental feature. While SQL-GPT will often return the correct query the quality of the output depends on the prompt and context you provide. We have preconfigured the context so that it has information about the tables used in this workbook but you might have to refine the prompt and/or the output query occasionally to get the results you expect.  \"}]}]",
        "previous_block_id": null,
        "next_block_id": "3be7da40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-04-25T19:28:18.001Z",
        "updated_at": "2024-01-19T13:32:47.473Z",
        "worksheetId": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3be198b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- From which 5 neighborhoods did most trip to JFK airport originate?\\nSELECT n.NTAName AS originating_neighborhood, COUNT(*) AS trip_count\\nFROM ki_home.taxi_data_streaming AS t\\nJOIN ki_home.nyct2020 AS n ON ST_CONTAINS(n.geom, ST_MAKEPOINT(t.pickup_longitude, t.pickup_latitude))\\nWHERE ST_CONTAINS(n.geom, ST_MAKEPOINT(-73.7781, 40.6413)) -- JFK airport coordinates\\nGROUP BY n.NTAName\\nORDER BY trip_count DESC\\nLIMIT 5;\"",
        "previous_block_id": "c6dc2c20-79ba-11ee-9d5d-9d16cc07ea81",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-11-02T20:04:59.991Z",
        "updated_at": "2024-01-19T13:32:47.482Z",
        "worksheetId": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3be31f50-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- From which 5 neighborhoods did most trip to JFK airport originate?\\nSELECT n.NTAName AS originating_neighborhood, COUNT(*) AS trip_count\\nFROM ki_home.taxi_data_streaming AS t\\nJOIN ki_home.nyct2020 AS n ON ST_CONTAINS(n.geom, ST_MAKEPOINT(t.pickup_longitude, t.pickup_latitude))\\nWHERE ST_CONTAINS(n.geom, ST_MAKEPOINT(-73.7781, 40.6413)) -- JFK airport coordinates\\nGROUP BY n.NTAName\\nORDER BY trip_count DESC\\nLIMIT 5;\"",
        "previous_block_id": "95c86e90-79bb-11ee-9d5d-9d16cc07ea81",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-11-02T20:09:01.158Z",
        "updated_at": "2024-01-19T13:32:47.492Z",
        "worksheetId": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3be51b20-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Use HOUR() and then summarize to find the total number of people who were dropped off at JFK for 1:00, 2:00, 3:00 and so on till 23:00\\nSELECT HOUR(DATETIME(dropoff_datetime)) AS dropoff_hour, COUNT(*) AS total_passengers\\nFROM \\\"ki_home\\\".\\\"taxi_data_streaming\\\"\\nWHERE ST_CONTAINS((SELECT geom FROM \\\"ki_home\\\".\\\"nyct2020\\\" WHERE NTAName = 'John F. Kennedy International Airport'), ST_MAKEPOINT(dropoff_longitude, dropoff_latitude))\\nGROUP BY dropoff_hour\\nORDER BY dropoff_hour;\"",
        "previous_block_id": "c84b5710-79bb-11ee-9d5d-9d16cc07ea81",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-11-02T20:10:22.623Z",
        "updated_at": "2024-01-19T13:32:47.500Z",
        "worksheetId": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3be67ab0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- A sample generate SQL query\\nGENERATE SQL FOR 'How many trips did each taxi vendor make to JFK airport?'\\nWITH OPTIONS \\n( \\n    context_names = 'nta_ctx, nyctaxi_ctx'\\n \\n)\"",
        "previous_block_id": "3be7da40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-11-02T20:49:41.779Z",
        "updated_at": "2024-01-19T13:32:47.507Z",
        "worksheetId": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "3be7da40-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"GENERATE SQL REQUEST USING SQL\",\"bold\":true}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"In addition to the prompt that comes with every worksheet. Kinetica also provides a GENERATE SQL function that can be used to generate SQL from natural language questions. \"}]}]",
        "previous_block_id": "3be06030-b6cf-11ee-a8f4-ab54b76e6fc9",
        "next_block_id": "3be67ab0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "created_at": "2023-11-02T20:56:51.801Z",
        "updated_at": "2024-01-19T13:32:47.515Z",
        "worksheetId": "3bdf27b0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      }
    ]
  },
  "vizMap": {
    "3b605ac0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b61ba50-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b6319e0-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {
          "html_source": "<h3 align=\"center\">\n    <img width=\"300\" src=\"https://github.com/kineticadb/examples/blob/master/_assets/images/logo_purple.png?raw=true\" alt=\"Kinetica Logo\"/>\n</h3>\n<h2 align=\"center\">The database for time and space</h2>\n<h3 align=\"center\">\n    <a href=\"https://www.kinetica.com/\" target=\"_blank\">Website</a> | <a href=\"https://docs.kinetica.com/7.2/\" target=\"_blank\">Docs</a> | <a href=\"https://docs.kinetica.com/7.2/api/\" target=\"_blank\">API Docs</a> | <a href=\"https://join.slack.com/t/kinetica-community/shared_invite/zt-1bt9x3mvr-uMKrXlSDXfy3oU~sKi84qg\" target=\"_blank\">Community Slack</a>   \n</h3>\n"
        },
        "id": "3b647970-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "HTML Visualization",
        "description": "Description for html visualization",
        "block_id": "3b6319e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualization_type_id": "757cd7cb-6f08-4416-9e9a-291cd651246f",
        "created_at": "2022-09-16T18:53:07.616Z",
        "updated_at": "2024-01-19T13:32:46.599Z",
        "blockId": "3b6319e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualizationTypeId": "757cd7cb-6f08-4416-9e9a-291cd651246f"
      }
    ],
    "3b65b1f0-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {
          "image_url": "https://github.com/kineticadb/examples/blob/master/_assets/gifs/architecture.gif?raw=true",
          "height": "",
          "width": "70%",
          "alignment": "center"
        },
        "id": "3b66ea70-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Image Visualization",
        "description": "Description for image visualization",
        "block_id": "3b65b1f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualization_type_id": "61ec39b0-3295-4354-b92c-831fec4dacb3",
        "created_at": "2022-09-16T18:57:09.401Z",
        "updated_at": "2024-01-19T13:32:46.615Z",
        "blockId": "3b65b1f0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualizationTypeId": "61ec39b0-3295-4354-b92c-831fec4dacb3"
      }
    ],
    "3b6f75f0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b72f860-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b759070-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b782880-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b7b83e0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b7dcdd0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b7f2d60-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b8065e0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b819e60-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b82fdf0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b843670-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b856ef0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b86a770-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b880700-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b98a8d0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b99e150-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b9b19d0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3b9c5250-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {
          "x_axis_column": "trip_distance",
          "y_axis_column": "total_amount",
          "series_column": "cab_type",
          "x_axis_label": "trip_distance",
          "y_axis_label": "fare_amount",
          "color_scheme": "spectral",
          "pointSize": 3
        },
        "id": "3b9db1e0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Scatter Plot Chart Visualization",
        "description": "Description for scatter plot chart visualization",
        "block_id": "3b9c5250-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualization_type_id": "f5ce2cd6-96ff-4119-8120-7f104696d2c4",
        "created_at": "2022-09-14T19:35:53.687Z",
        "updated_at": "2024-01-19T13:32:46.974Z",
        "blockId": "3b9c5250-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualizationTypeId": "f5ce2cd6-96ff-4119-8120-7f104696d2c4"
      }
    ],
    "3b9f3880-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3ba0e630-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3ba21eb0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3ba37e40-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3badde80-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3baf1700-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bb07690-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bb1af10-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bb2e790-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {
          "x_axis_column": "Pickup_Hour",
          "y_axis_column": "Total_Pickups",
          "color_scheme": "spectral",
          "x_axis_label": "Pickup Hour",
          "y_axis_label": "Total Pickups"
        },
        "id": "3bb44720-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Bar Chart Visualization",
        "description": "Description for bar chart visualization",
        "block_id": "3bb2e790-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualization_type_id": "561a39ca-80d4-4c53-9133-62d2c0e82405",
        "created_at": "2022-09-16T19:57:27.803Z",
        "updated_at": "2024-01-19T13:32:47.122Z",
        "blockId": "3bb2e790-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualizationTypeId": "561a39ca-80d4-4c53-9133-62d2c0e82405"
      }
    ],
    "3bb61be0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bb77b70-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bc202c0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bc36250-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bc49ad0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bc5fa60-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bc78100-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bc8b980-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bc9f200-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bcb2a80-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bcc6300-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bd7ada0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3bd90d30-b6cf-11ee-a8f4-ab54b76e6fc9": [
      {
        "config": {
          "image_url": "https://github.com/kineticadb/examples/raw/master/quickstart/img/reveal_taxi.gif",
          "height": "",
          "width": "",
          "alignment": "center"
        },
        "id": "3bda6cc0-b6cf-11ee-a8f4-ab54b76e6fc9",
        "name": "Image Visualization",
        "description": "Description for image visualization",
        "block_id": "3bd90d30-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualization_type_id": "61ec39b0-3295-4354-b92c-831fec4dacb3",
        "created_at": "2022-09-20T19:34:01.409Z",
        "updated_at": "2024-01-19T13:32:47.372Z",
        "blockId": "3bd90d30-b6cf-11ee-a8f4-ab54b76e6fc9",
        "visualizationTypeId": "61ec39b0-3295-4354-b92c-831fec4dacb3"
      }
    ],
    "3be06030-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3be198b0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3be31f50-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3be51b20-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3be67ab0-b6cf-11ee-a8f4-ab54b76e6fc9": [],
    "3be7da40-b6cf-11ee-a8f4-ab54b76e6fc9": []
  }
}
