{
  "workbook": {
    "metadata": {
      "revision": 20250220,
      "example_id": "9aed4ffc-8ba6-4012-8a26-efbf5806f232",
      "features": ["Graph analytics", "Location analytics"],
      "approx_time": "10 mins",
      "thumbnail": "https://raw.githubusercontent.com/kineticadb/featured_examples/main/_images/foursquare_places.png"
    },
    "config": {},
    "id": "5dda4780-efb5-11ef-adac-9371f7c22665",
    "name": "Analyze Foursquare OS Places",
    "description": "Compute batch isochrones over road networks with a single SQL statement. Kinetica’s distributed graph processing delivers lightning-fast travel time zone computations, making it a powerful asset for urban planning, emergency response, and business location intelligence—without external tools or complex integrations.",
    "user_id": "269c7300-59ea-11ed-926e-2d9c00c4db49",
    "warehouse_id": null,
    "is_example": true,
    "is_shared": false,
    "created_at": "2025-01-14T17:22:37.113Z",
    "updated_at": "2025-02-20T18:36:08.874Z",
    "userId": "269c7300-59ea-11ed-926e-2d9c00c4db49"
  },
  "worksheets": [
    {
      "config": {
        "chat_messages": []
      },
      "id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
      "name": "Data Load (non Free SaaS)",
      "description": "Description for Sheet 1",
      "previous_worksheet_id": null,
      "next_worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
      "workbook_id": "5dda4780-efb5-11ef-adac-9371f7c22665",
      "created_at": "2025-01-14T17:22:37.135Z",
      "updated_at": "2025-02-20T18:20:43.644Z",
      "workbookId": "5dda4780-efb5-11ef-adac-9371f7c22665"
    },
    {
      "config": {
        "chat_messages": []
      },
      "id": "5dee44b0-efb5-11ef-adac-9371f7c22665",
      "name": "Other examples",
      "description": "",
      "previous_worksheet_id": "5e253330-efb5-11ef-adac-9371f7c22665",
      "next_worksheet_id": null,
      "workbook_id": "5dda4780-efb5-11ef-adac-9371f7c22665",
      "created_at": "2025-02-04T17:37:48.680Z",
      "updated_at": "2025-02-20T18:35:35.613Z",
      "workbookId": "5dda4780-efb5-11ef-adac-9371f7c22665"
    },
    {
      "config": {
        "chat_messages": []
      },
      "id": "5df633f0-efb5-11ef-adac-9371f7c22665",
      "name": "Data Exploration",
      "description": "Run some queries and look at the data",
      "previous_worksheet_id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
      "next_worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
      "workbook_id": "5dda4780-efb5-11ef-adac-9371f7c22665",
      "created_at": "2025-02-05T17:31:29.570Z",
      "updated_at": "2025-02-20T18:36:08.864Z",
      "workbookId": "5dda4780-efb5-11ef-adac-9371f7c22665"
    },
    {
      "config": {
        "chat_messages": []
      },
      "id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
      "name": "Place Analysis with Travel Time",
      "description": "Description for sheet 4",
      "previous_worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
      "next_worksheet_id": "5e253330-efb5-11ef-adac-9371f7c22665",
      "workbook_id": "5dda4780-efb5-11ef-adac-9371f7c22665",
      "created_at": "2025-02-12T18:23:38.099Z",
      "updated_at": "2025-02-20T18:32:14.637Z",
      "workbookId": "5dda4780-efb5-11ef-adac-9371f7c22665"
    },
    {
      "config": {
        "chat_messages": []
      },
      "id": "5e253330-efb5-11ef-adac-9371f7c22665",
      "name": "Fire Station Coverage",
      "description": "Description for sheet 5",
      "previous_worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
      "next_worksheet_id": "5dee44b0-efb5-11ef-adac-9371f7c22665",
      "workbook_id": "5dda4780-efb5-11ef-adac-9371f7c22665",
      "created_at": "2025-02-19T03:50:49.283Z",
      "updated_at": "2025-02-20T18:35:17.715Z",
      "workbookId": "5dda4780-efb5-11ef-adac-9371f7c22665"
    }
  ],
  "blockMap": {
    "5ddb8000-efb5-11ef-adac-9371f7c22665": [
      {
        "config": {},
        "id": "5ddd54c0-efb5-11ef-adac-9371f7c22665",
        "name": "Block 1",
        "description": "Description for Block 1",
        "content": "\"-- Data source for FSQ OSS Places\\nCREATE OR REPLACE DATA SOURCE public.fsq_oss_places\\nLOCATION = 'S3'\\nWITH OPTIONS (\\n    ANONYMOUS = 'true',\\n    BUCKET NAME = 'fsq-os-places-us-east-1',\\n    REGION = 'us-east-1'\\n);\"",
        "previous_block_id": "5de62e60-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5de013e0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-01-14T17:22:37.152Z",
        "updated_at": "2025-02-20T18:06:11.534Z",
        "worksheetId": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5de013e0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Load FSQ OSS Places\\nLOAD DATA INTO public.fsq_places\\nFROM FILE PATHS 'release/dt=2025-02-06/places/parquet/'\\n WITH OPTIONS (\\n    DATA SOURCE = 'public.fsq_oss_places',\\n    ON ERROR = PERMISSIVE\\n);\"",
        "previous_block_id": "5ddd54c0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5de1c190-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-01-14T17:25:39.459Z",
        "updated_at": "2025-02-20T18:06:11.540Z",
        "worksheetId": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5de1c190-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Load FSQ OSS Place Categories\\nLOAD DATA INTO public.fsq_categories\\nFROM FILE PATHS 'release/dt=2025-02-06/categories/parquet/'\\n WITH OPTIONS (\\n    DATA SOURCE = 'public.fsq_oss_places',\\n    ON ERROR = PERMISSIVE\\n);\"",
        "previous_block_id": "5de013e0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5de40b80-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-01-14T17:43:22.831Z",
        "updated_at": "2025-02-20T18:06:11.547Z",
        "worksheetId": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5de2d300-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Load Seattle OSM road network\\nLOAD DATA INTO public.seattle_roads\\nFROM FILE PATHS 'osm_seattle_metro_road_network_gfx.csv.gz'\\nFORMAT TEXT \\nWITH OPTIONS(\\n    DATA SOURCE = 'public.seattle_osm_data'\\n)\"",
        "previous_block_id": "5de40b80-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5de51cf0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-12T15:35:34.199Z",
        "updated_at": "2025-02-20T18:06:11.553Z",
        "worksheetId": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5de40b80-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Data source for Seattle OSM road network\\nCREATE OR REPLACE DATA SOURCE public.seattle_osm_data\\nLOCATION = 'S3'\\nWITH OPTIONS (\\n    ANONYMOUS = 'true',\\n    BUCKET NAME = 'kinetica-examples-data-public',\\n    REGION = 'us-east-1'\\n)\"",
        "previous_block_id": "5de1c190-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5de2d300-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-12T18:19:13.491Z",
        "updated_at": "2025-02-20T18:06:11.560Z",
        "worksheetId": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5de51cf0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Create graph from Seattle OSM road network\\nCREATE OR REPLACE DIRECTED GRAPH public.osm_seattle_metro_road_network (\\n    EDGES => INPUT_TABLES(\\n        (SELECT \\n            EDGE_ID,\\n            EDGE_WKTLINE,\\n            EDGE_DIRECTION,\\n            WEIGHTS_VALUESPECIFIED AS WEIGHT_VALUESPECIFIED\\n            FROM public.seattle_roads\\n        )\\n    ),\\n    OPTIONS => KV_PAIRS(merge_tolerance = '1.0e-4')\\n);\"",
        "previous_block_id": "5de2d300-efb5-11ef-adac-9371f7c22665",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-12T18:19:29.494Z",
        "updated_at": "2025-02-20T18:06:11.566Z",
        "worksheetId": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5de62e60-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"CREATE SCHEMA public\"",
        "previous_block_id": null,
        "next_block_id": "5ddd54c0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-12T18:22:06.006Z",
        "updated_at": "2025-02-20T18:06:11.572Z",
        "worksheetId": "5ddb8000-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      }
    ],
    "5dee44b0-efb5-11ef-adac-9371f7c22665": [
      {
        "config": {},
        "id": "5def5620-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Show the 10 min reachability polygons (isochrones) from 10 random locations\\nDROP TABLE if exists seattle_contours;\\nEXECUTE FUNCTION\\n    MATCH_GRAPH\\n    (GRAPH => 'public.osm_seattle_metro_road_network',\\n      SOLVE_METHOD => 'match_isochrone',     \\n      SAMPLE_POINTS => INPUT_TABLES((select 1 AS ID, ST_GEOMFROMTEXT('POINT(-122.303426 47.555293)') as WKTPOINT), \\n                                    (select 2 AS ID, ST_GEOMFROMTEXT('POINT(-122.379273 47.515505)') as WKTPOINT),\\n                                    (select 3 AS ID, ST_GEOMFROMTEXT('POINT(-122.119785 47.358027)') as WKTPOINT),\\n                                    (select 4 AS ID, ST_GEOMFROMTEXT('POINT(-122.088521 47.978087)') as WKTPOINT),\\n                                    (select 5 AS ID, ST_GEOMFROMTEXT('POINT(-122.029158 47.991328)') as WKTPOINT),\\n                                    (select 6 AS ID, ST_GEOMFROMTEXT('POINT(-122.167888 48.093946)') as WKTPOINT), \\n                                    (select 7 AS ID, ST_GEOMFROMTEXT('POINT(-122.258118 47.868229)') as WKTPOINT), \\n                                    (select 8 AS ID, ST_GEOMFROMTEXT('POINT(-123.015029 47.444572)') as WKTPOINT),                                    \\n                                    (select 9 AS ID, ST_GEOMFROMTEXT('POINT(-123.414615 47.169875)') as WKTPOINT),\\n                                    (select 10 AS ID, ST_GEOMFROMTEXT('POINT(-121.958755 47.177694)') as WKTPOINT)                                                                       \\n                        ),      \\n      SOLUTION_TABLE => 'seattle_contours',\\n      OPTIONS => KV_PAIRS(      \\n      max_radius = '600', result_table_index = '2')\\n  );\"",
        "previous_block_id": "5df23c50-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5df0b5b0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5dee44b0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-04T18:47:23.129Z",
        "updated_at": "2025-02-20T18:35:53.137Z",
        "worksheetId": "5dee44b0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5df0b5b0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"table_schema\":\"\",\"table_name\":\"seattle_contours_polygons\",\"geometry_type\":\"wkt\",\"wkt\":\"POLYGON\",\"renderType\":\"cb_raster\",\"cbAttr\":\"SOURCE\",\"cb_type\":\"equal_interval\",\"cb_num_classes\":10,\"cb_min_value\":1,\"cb_max_value\":10,\"cb_colormap\":\"jet\",\"cbVals\":[\"1.00\",\"1.90\",\"2.80\",\"3.70\",\"4.60\",\"5.50\",\"6.40\",\"7.30\",\"8.20\",\"9.10\",10],\"pointSize\":2,\"lineWidth\":2,\"center_longitude\":-122.6886,\"center_latitude\":47.6627,\"zoom_level\":8.47,\"opacity\":70,\"title\":\"\",\"block_height\":535,\"auto_refresh_interval\":\"\",\"basemap_style\":\"color\",\"overrides\":\"\"}]",
        "previous_block_id": "5def5620-efb5-11ef-adac-9371f7c22665",
        "next_block_id": null,
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "5dee44b0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-04T19:12:02.055Z",
        "updated_at": "2025-02-20T18:06:11.618Z",
        "worksheetId": "5dee44b0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      },
      {
        "config": {
          "pageSize": 25
        },
        "id": "5df23c50-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- All in one query: Find all groceries that are within the 10 min isochrones from the 10 random locations over the seattle road network\\nselect polys.SOURCE, places.name\\nfrom        \\n    MATCH_GRAPH (GRAPH => 'public.osm_seattle_metro_road_network',\\n      SOLVE_METHOD => 'match_isochrone',     \\n      SAMPLE_POINTS => INPUT_TABLES((select 1 AS ID, ST_GEOMFROMTEXT('POINT(-122.303426 47.555293)') as WKTPOINT), \\n                                    (select 2 AS ID, ST_GEOMFROMTEXT('POINT(-122.379273 47.515505)') as WKTPOINT),\\n                                    (select 3 AS ID, ST_GEOMFROMTEXT('POINT(-122.119785 47.358027)') as WKTPOINT),\\n                                    (select 4 AS ID, ST_GEOMFROMTEXT('POINT(-122.088521 47.978087)') as WKTPOINT),\\n                                    (select 5 AS ID, ST_GEOMFROMTEXT('POINT(-122.029158 47.991328)') as WKTPOINT),\\n                                    (select 6 AS ID, ST_GEOMFROMTEXT('POINT(-122.167888 48.093946)') as WKTPOINT), \\n                                    (select 7 AS ID, ST_GEOMFROMTEXT('POINT(-122.258118 47.868229)') as WKTPOINT), \\n                                    (select 8 AS ID, ST_GEOMFROMTEXT('POINT(-123.015029 47.444572)') as WKTPOINT),                                    \\n                                    (select 9 AS ID, ST_GEOMFROMTEXT('POINT(-123.414615 47.169875)') as WKTPOINT),\\n                                    (select 10 AS ID, ST_GEOMFROMTEXT('POINT(-121.958755 47.177694)') as WKTPOINT)                                                                       \\n                        ),           \\n      OPTIONS => KV_PAIRS(      \\n      max_radius = '600', result_table_index = '2')\\n    ) as polys\\n    INNER JOIN public.fsq_places as places \\n    ON stxy_intersects(places.longitude,places.latitude,polys.POLYGON) AND string(places.fsq_category_labels) LIKE '%Grocery%' order by SOURCE asc;\"",
        "previous_block_id": null,
        "next_block_id": "5def5620-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5dee44b0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-12T17:44:19.772Z",
        "updated_at": "2025-02-20T18:35:51.660Z",
        "worksheetId": "5dee44b0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      }
    ],
    "5df633f0-efb5-11ef-adac-9371f7c22665": [
      {
        "config": {},
        "id": "5df79380-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"Foursquare's Open Source Places data set is now available for commercial use under an Apache 2.0 license: https://location.foursquare.com/resources/blog/products/foursquare-open-source-places-a-new-foundational-dataset-for-the-geospatial-community/\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"With Kinetica we can easily explore and analyze large geospatial datasets like Foursquare Open Source Places.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Thanks to Kinetica's GPU accelerated server-side visalization, we can instantly view and analyze all 100 million worldwide places on a map!\"}]}]",
        "previous_block_id": null,
        "next_block_id": "5dfaeee0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-05T17:32:26.134Z",
        "updated_at": "2025-02-20T18:06:11.719Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5df8a4f0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"\"",
        "previous_block_id": "3fe0cf40-e7fb-11ef-a7cb-991d57919859",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-05T18:57:02.119Z",
        "updated_at": "2025-02-20T18:06:11.725Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5df9dd70-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"\"",
        "previous_block_id": "1d58a560-ee5e-11ef-a7cb-991d57919859",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-05T22:28:19.888Z",
        "updated_at": "2025-02-20T18:06:11.731Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5dfaeee0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"table_schema\":\"public\",\"table_name\":\"fsq_places\",\"geometry_type\":\"wkt\",\"renderType\":\"heatmap\",\"center_longitude\":\"0\",\"center_latitude\":\"0\",\"zoom_level\":2,\"opacity\":70,\"title\":\"\",\"block_height\":535,\"auto_refresh_interval\":\"\",\"basemap_style\":\"color\",\"overrides\":\"\",\"wkt\":\"geom\",\"colormap\":\"jet\",\"blurRadius\":2}]",
        "previous_block_id": "5df79380-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e009430-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-10T22:06:44.098Z",
        "updated_at": "2025-02-20T18:06:11.737Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      },
      {
        "config": {},
        "id": "5dfc0050-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- How many Starbucks places are in the data set?\\nSELECT COUNT(*) AS count FROM public.fsq_places \\nWHERE STRING(fsq_category_labels) LIKE '%Cafe%' AND LOWER (name) LIKE '%starbucks%'\"",
        "previous_block_id": "5e009430-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5dfd38d0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-10T23:04:40.089Z",
        "updated_at": "2025-02-20T18:31:44.381Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5dfd38d0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Now we'll visualize the Starbucks locations by creating a materialized view and adding a Map Block\\nCREATE or REPLACE MATERIALIZED VIEW fsq_places_starbucks AS \\n    SELECT geom FROM public.fsq_places \\n    WHERE geom IS NOT NULL \\n        AND STRING(fsq_category_labels) LIKE '%Cafe%' \\n        AND LOWER (name) LIKE '%starbucks%'\"",
        "previous_block_id": "5dfc0050-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5dfe4a40-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-10T23:07:07.726Z",
        "updated_at": "2025-02-20T18:32:00.386Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5dfe4a40-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"table_schema\":\"\",\"table_name\":\"fsq_places_starbucks\",\"geometry_type\":\"wkt\",\"wkt\":\"geom\",\"renderType\":\"raster\",\"fillColor\":\"ca2c92\",\"borderColor\":\"3700b3\",\"pointSize\":2,\"lineWidth\":2,\"center_longitude\":\"0.0000\",\"center_latitude\":\"-0.0000\",\"zoom_level\":\"2.00\",\"opacity\":70,\"title\":\"\",\"block_height\":535,\"auto_refresh_interval\":\"\",\"basemap_style\":\"color\",\"overrides\":\"\"}]",
        "previous_block_id": "5dfd38d0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5dff82c0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-10T23:10:41.738Z",
        "updated_at": "2025-02-20T18:06:11.766Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      },
      {
        "config": {},
        "id": "5dff82c0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Zooming into Seattle, we can isolate the Starbucks within a bounding box for the greater Seattle region.\\nCREATE or REPLACE LOGICAL VIEW fsq_places_starbucks_seattle AS\\n    SELECT geom AS WKTPOINT from fsq_places_starbucks\\n    WHERE stxy_intersects(ST_X(geom), ST_Y(geom),\\n                            'POLYGON ((-124.7228 47.03614, -121.16819 47.03614, -121.16819 48.578765, -124.72282 48.57876, -124.72282 47.03614))') \"",
        "previous_block_id": "5dfe4a40-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e01a5a0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-12T20:41:29.044Z",
        "updated_at": "2025-02-20T18:32:00.766Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e009430-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"With SQL and Kinetica's spatial and graph capabilites, we can further analyze the data.  Let's zoom in on a well known brand, like Starbucks.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]",
        "previous_block_id": "5dfaeee0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5dfc0050-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T01:19:09.449Z",
        "updated_at": "2025-02-20T18:06:11.779Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e01a5a0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"table_schema\":\"\",\"table_name\":\"fsq_places_starbucks_seattle\",\"geometry_type\":\"wkt\",\"wkt\":\"WKTPOINT\",\"renderType\":\"raster\",\"fillColor\":\"ca2c92\",\"borderColor\":\"3700b3\",\"pointSize\":2,\"lineWidth\":2,\"center_longitude\":-122.4317,\"center_latitude\":47.7796,\"zoom_level\":8,\"opacity\":70,\"title\":\"\",\"block_height\":535,\"auto_refresh_interval\":\"\",\"basemap_style\":\"color\",\"overrides\":\"\"}]",
        "previous_block_id": "5dff82c0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": null,
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T01:40:57.236Z",
        "updated_at": "2025-02-20T18:26:31.725Z",
        "worksheetId": "5df633f0-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      }
    ],
    "5e0ec500-efb5-11ef-adac-9371f7c22665": [
      {
        "config": {},
        "id": "5e0fd670-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"/* \\n\\nThis query calculates the area that is within a 2 minute driving distance from all Starbucks locations in the greater Seattle area.\\n\\nThe subquery selects all places from public.fsq_places that:\\n- Are within a bounding box defined by the polygon (stxy_intersects ensures only locations within Seattle metro).\\n- Have a category containing \\\"Cafe\\\".\\n- Have a name containing \\\"Starbucks\\\" (case insensitive).\\n- Have a location (geometry is not NULL)\\n\\nFor each of the places, we run Inverse Shortest Path Analysis:\\n- The SOLVE_GRAPH function computes inverse shortest paths on the public.osm_seattle_metro_road_network.  \\n- It finds areas reachable within a maximum radius of 120 seconds (max_solution_radius).\\n- The Starbucks locations are used as the source nodes for this analysis.\\n\\nGenerate a smoothed boundary (concave hull):\\n- The result of the graph solver provides point geometries (x, y coordinates).\\n- These points are collected into a single geometry (ST_collect_aggregate).\\n- A smoothed boundary (concave hull) is computed around these points with ST_concavehull(poly, 0.8), controlling how tightly the shape fits around the points.\\n\\nDissolve Overlapping Areas:\\n- The final step (ST_DISSOLVEOVERLAPPING) merges overlapping coverage areas into a single region.\\n\\n*/\\n\\n SELECT ST_DISSOLVEOVERLAPPING(poly) as WKT\\n FROM\\n (SELECT ST_concavehull(ST_collect_aggregate(ST_makePoint(x,y)),0.8) as poly\\n    FROM \\n    SOLVE_GRAPH\\n    (GRAPH => 'public.osm_seattle_metro_road_network',\\n      SOLVER_TYPE => 'INVERSE_SHORTEST_PATH',     \\n      SOURCE_NODES => INPUT_TABLES(\\n           (SELECT geom AS WKTPOINT from public.fsq_places\\n           WHERE\\n                stxy_intersects(longitude,latitude,\\n                 'POLYGON ((-124.7228 47.03614, -121.16819 47.03614, -121.16819 48.578765, -124.72282 48.57876, -124.72282 47.03614))') \\n            AND string(fsq_category_labels) LIKE '%Cafe%' \\n            AND LOWER(name) LIKE '%starbucks%'\\n            AND geom IS NOT NULL)\\n      ),              \\n      OPTIONS => KV_PAIRS(max_solution_radius = '120')\\n    )\\n    WHERE z < 120\\n    GROUP by SOURCE)\"",
        "previous_block_id": "5e18fe30-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e1a5dc0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-12T18:25:03.333Z",
        "updated_at": "2025-02-20T18:32:25.171Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e126e80-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- All in one SQL statement: Finding 2 min aggregated coverage for all 7-Eleven cafe shops in Seattle metro\\ncreate or replace table seveneleven_coverage as\\n SELECT ST_DISSOLVEOVERLAPPING(poly) as WKT\\n FROM\\n (SELECT ST_concavehull(ST_collect_aggregate(ST_makePoint(x,y)),0.8) as poly\\n    FROM \\n    SOLVE_GRAPH\\n    (GRAPH => 'public.osm_seattle_metro_road_network',\\n      SOLVER_TYPE => 'INVERSE_SHORTEST_PATH',     \\n      SOURCE_NODES => INPUT_TABLES(\\n           (SELECT geom AS WKTPOINT from public.fsq_places\\n           WHERE\\n                stxy_intersects(longitude,latitude,\\n                 'POLYGON ((-124.7228 47.03614, -121.16819 47.03614, -121.16819 48.578765, -124.72282 48.57876, -124.72282 47.03614))') \\n            AND LOWER(name) LIKE '%eleven%'\\n            AND geom IS NOT NULL)\\n      ),              \\n      OPTIONS => KV_PAIRS(max_solution_radius = '120')\\n    )\\n    WHERE z < 120\\n    GROUP by SOURCE)\"",
        "previous_block_id": "5e1a5dc0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e137ff0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-12T20:46:43.324Z",
        "updated_at": "2025-02-20T18:32:35.632Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e137ff0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- All in one SQL statement: Finding 2 min aggregated coverage for all Peets cafe shops in Seattle metro\\n-- The Visualization showing the superimposed coverages of all the 3 cafe shops within 2-minute reach in Seattle metro residences\\ncreate or replace table peets_coverage as\\n SELECT ST_DISSOLVEOVERLAPPING(poly) as WKT\\n FROM\\n (SELECT ST_concavehull(ST_collect_aggregate(ST_makePoint(x,y)),0.8) as poly\\n    FROM \\n    SOLVE_GRAPH\\n    (GRAPH => 'public.osm_seattle_metro_road_network',\\n      SOLVER_TYPE => 'INVERSE_SHORTEST_PATH',     \\n      SOURCE_NODES => INPUT_TABLES(\\n           (SELECT geom AS WKTPOINT from public.fsq_places\\n           WHERE\\n                stxy_intersects(longitude,latitude,\\n                 'POLYGON ((-124.7228 47.03614, -121.16819 47.03614, -121.16819 48.578765, -124.72282 48.57876, -124.72282 47.03614))') \\n            AND LOWER(name) LIKE '%peets%'\\n            AND geom IS NOT NULL)\\n      ),              \\n      OPTIONS => KV_PAIRS(max_solution_radius = '120')\\n    )\\n    WHERE z < 120\\n    GROUP by SOURCE)\"",
        "previous_block_id": "5e126e80-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e149160-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-13T14:50:27.084Z",
        "updated_at": "2025-02-20T18:32:44.610Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e149160-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"table_schema\":\"\",\"table_name\":\"starbucks_coverage\",\"geometry_type\":\"wkt\",\"wkt\":\"WKT\",\"renderType\":\"raster\",\"fillColor\":\"ca2c92\",\"borderColor\":\"3700b3\",\"pointSize\":2,\"lineWidth\":2,\"center_longitude\":-120.7116,\"center_latitude\":47.703,\"zoom_level\":8.96,\"opacity\":70,\"title\":\"\",\"block_height\":535,\"auto_refresh_interval\":\"\",\"basemap_style\":\"color\",\"overrides\":\"\"},{\"table_schema\":\"\",\"table_name\":\"seveneleven_coverage\",\"geometry_type\":\"wkt\",\"wkt\":\"WKT\",\"renderType\":\"raster\",\"fillColor\":\"d7df28ff\",\"borderColor\":\"3700b3\",\"pointSize\":2,\"lineWidth\":2,\"opacity\":70,\"auto_refresh_interval\":\"\",\"overrides\":\"\"},{\"table_schema\":\"\",\"table_name\":\"peets_coverage\",\"geometry_type\":\"wkt\",\"wkt\":\"WKT\",\"renderType\":\"raster\",\"fillColor\":\"0fec13ff\",\"borderColor\":\"3700b3\",\"pointSize\":2,\"lineWidth\":2,\"opacity\":70,\"auto_refresh_interval\":\"\",\"overrides\":\"\"}]",
        "previous_block_id": "5e137ff0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": null,
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-13T15:13:20.125Z",
        "updated_at": "2025-02-20T18:33:20.966Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      },
      {
        "config": {},
        "id": "5e15a2d0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"Kinetica's built in Graph engine supports graph-based analysis and algorithms through SQL.  By creating a graph from road network data (such as Open Street Map), we can analyze travel time to different places using Kinetica's built-in algorithms.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"See the Graph Shortest Path sample workbook for more information on building and analyzing road network graphs in Kinetica.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"You can try analyzing a different part of the US by building your own graph from the OSM road network.  Select Create Graph in the Data Object Explorer in the left hand pane, and then choose the OSM option.\"}]}]",
        "previous_block_id": null,
        "next_block_id": "5e17ecc0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T01:45:15.598Z",
        "updated_at": "2025-02-20T18:06:11.900Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e16db50-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"table_schema\":\"public\",\"table_name\":\"seattle_roads\",\"geometry_type\":\"wkt\",\"renderType\":\"raster\",\"center_longitude\":\"-122.9455\",\"center_latitude\":\"47.8132\",\"zoom_level\":\"7.31\",\"opacity\":70,\"title\":\"\",\"block_height\":535,\"auto_refresh_interval\":\"\",\"basemap_style\":\"color\",\"overrides\":\"\",\"wkt\":\"EDGE_WKTLINE\",\"fillColor\":\"ca2c92\",\"borderColor\":\"3700b3\",\"pointSize\":2,\"lineWidth\":2}]",
        "previous_block_id": "5e17ecc0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e18fe30-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "e8ccc4e2-793f-47ed-9af2-f0a58a840006",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T01:55:33.260Z",
        "updated_at": "2025-02-20T18:06:11.906Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "e8ccc4e2-793f-47ed-9af2-f0a58a840006"
      },
      {
        "config": {},
        "id": "5e17ecc0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"First, let's look at the OSM road network we have extracted for the greater Seattle region.\"}]}]",
        "previous_block_id": "5e15a2d0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e16db50-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T01:56:24.544Z",
        "updated_at": "2025-02-20T18:06:11.913Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e18fe30-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"Using this road network graph, we can find all of the points that are within a 2 minute drive to a Starbucks.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Here's a single line of SQL to perform this isochrone analysis. \"}]}]",
        "previous_block_id": "5e16db50-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e0fd670-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T01:57:10.859Z",
        "updated_at": "2025-02-20T18:06:11.920Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e1a5dc0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"Now we will create tables for next 7-Eleven and Peets Coffee so we can compare their respsective coverage areas.\"}]}]",
        "previous_block_id": "5e0fd670-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e126e80-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T03:52:01.029Z",
        "updated_at": "2025-02-20T18:06:11.929Z",
        "worksheetId": "5e0ec500-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      }
    ],
    "5e253330-efb5-11ef-adac-9371f7c22665": [
      {
        "config": {},
        "id": "5e2692c0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"Similarly, we can analyze the areas within the Seattle region that are within close proximity to a fire station.\"}]}]",
        "previous_block_id": null,
        "next_block_id": "5e2b26a0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e253330-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T03:55:03.802Z",
        "updated_at": "2025-02-20T18:06:12.001Z",
        "worksheetId": "5e253330-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e27cb40-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Find the fastest fire stations to reach to a disaster x,y location among all available over seattle road network\\n-- Click on  \\nDROP TABLE IF EXISTS batch_sssp;\\nEXECUTE FUNCTION\\nMATCH_GRAPH(\\nGRAPH => 'public.osm_seattle_metro_road_network',\\nSAMPLE_POINTS => INPUT_TABLES(\\n   (SELECT row_number() over (partition by null order by fsq_place_id) AS OD_ID, \\n           ST_geomFromText('POINT(-121.958755 47.177694)')             AS ORIGIN_WKTPOINT,  \\n           geom                                                        AS DESTINATION_WKTPOINT \\n    FROM public.fsq_places\\n        WHERE  stxy_intersects(longitude,latitude,'POLYGON ((-124.7228 47.03614, -121.16819 47.03614, -121.16819 48.578765, -124.72282 48.57876, -124.72282 47.03614))') AND\\n        string(fsq_category_labels) LIKE '%Fire Station%')\\n   ),\\nSOLVE_METHOD => 'match_batch_solves',\\nSOLUTION_TABLE => 'batch_sssp',\\nOPTIONS => KV_PAIRS(inverse_solve = 'true', output_tracks = 'true', svg_speed = '50', svg_basemap = 'true'));\"",
        "previous_block_id": "5e2d97a0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e2903c0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e253330-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T03:56:01.847Z",
        "updated_at": "2025-02-20T18:34:09.600Z",
        "worksheetId": "5e253330-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e2903c0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Create a look up table for hashed place_ids for the Fire Stations\\ncreate or replace table hashing_map as\\n SELECT hash(fsq_place_id) as hashed_id, fsq_place_id as string_id FROM public.fsq_places \\n   WHERE stxy_intersects(longitude,latitude,'POLYGON ((-124.7228 47.03614, -121.16819 47.03614, -121.16819 48.578765, -124.72282 48.57876, -124.72282 47.03614))') \\n   AND\\n   string(fsq_category_labels) LIKE '%Fire Station%';\\n   \\n-- Find fire station names that can reach to a x,y location in the minimum time among all available\\nwith t as (\\n    select * from MATCH_GRAPH(\\n        GRAPH => 'public.osm_seattle_metro_road_network',\\n        SAMPLE_POINTS => INPUT_TABLES(\\n            (SELECT hash(fsq_place_id) AS  OD_ID, ST_geomFromText('POINT(-121.958755 47.177694)') AS ORIGIN_WKTPOINT, geom AS DESTINATION_WKTPOINT \\n                FROM public.fsq_places\\n                WHERE  stxy_intersects(longitude,latitude,\\n                 'POLYGON ((-124.7228 47.03614, -121.16819 47.03614, -121.16819 48.578765, -124.72282 48.57876, -124.72282 47.03614))') \\n                    AND\\n                    string(fsq_category_labels) LIKE '%Fire Station%')\\n            ),\\n        SOLVE_METHOD => 'match_batch_solves',\\n        OPTIONS => KV_PAIRS(inverse_solve = 'true')\\n    )\\n)\\nSELECT distinct w.name, t.COST\\nFROM public.fsq_places as w\\n\\nINNER JOIN  hashing_map as s \\nON w.fsq_place_id = s.string_id\\n\\nINNER JOIN t\\nON long(t.INDEX) = s.hashed_id\\norder by 2 asc;\"",
        "previous_block_id": "5e27cb40-efb5-11ef-adac-9371f7c22665",
        "next_block_id": null,
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e253330-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T03:56:06.904Z",
        "updated_at": "2025-02-20T18:35:13.269Z",
        "worksheetId": "5e253330-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e2b26a0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "\"-- Finding 4 min aggregated coverage for fire stations in Seattle metro\\nSELECT ST_DISSOLVEOVERLAPPING(poly) as WKT\\n FROM\\n (SELECT ST_concavehull(ST_collect_aggregate(ST_makePoint(x,y)),0.8) as poly\\n    FROM \\n    SOLVE_GRAPH\\n    (GRAPH => 'public.osm_seattle_metro_road_network',\\n      SOLVER_TYPE => 'SHORTEST_PATH',     \\n      SOURCE_NODES => INPUT_TABLES(\\n           (SELECT geom AS WKTPOINT from public.fsq_places\\n            WHERE\\n                  stxy_intersects(longitude,latitude,\\n                   'POLYGON ((-124.7228 47.03614, -121.16819 47.03614, -121.16819 48.578765, -124.72282 48.57876, -124.72282 47.03614))') \\n                AND\\n                  string(fsq_category_labels) LIKE '%Fire Station%'\\n           ) \\n      ),\\n      OPTIONS => KV_PAIRS(max_solution_radius = '240')\\n    )\\n    WHERE z < 240\\n    GROUP by SOURCE)\"",
        "previous_block_id": "5e2692c0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e2d97a0-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "84b9233c-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e253330-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T03:56:25.851Z",
        "updated_at": "2025-02-20T18:33:46.367Z",
        "worksheetId": "5e253330-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "84b9233c-14e3-11eb-adc1-0242ac120002"
      },
      {
        "config": {},
        "id": "5e2d97a0-efb5-11ef-adac-9371f7c22665",
        "name": "Block",
        "description": "Description for Block",
        "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"The pairwise batch solve for every station to go to one location used below - instead of running as many dijkstra solves for each station (origin), destination pair, which would be 500+ solves, we make use of the Kinetica's inverse solve  trademark  algorithm to revert road directions inside the solve, and hence doing it only one solve which gives the same results but in a fraction of time.\"}]},{\"type\":\"paragraph\",\"children\":[{\"text\":\"Using the option 'output_tracks' we demonstrate the simulation of the result as \"},{\"text\":\"SVG\",\"bold\":true},{\"text\":\" file in the match/graph API response. After running below, there will be a button appearing as '\"},{\"text\":\"Animate\",\"bold\":true},{\"text\":\"' - that would play the SVG content with the relevant options set below. (E.g.: svg_speed, svg_basemap, svg_height, svg_width, etc)  - \"}]}]",
        "previous_block_id": "5e2b26a0-efb5-11ef-adac-9371f7c22665",
        "next_block_id": "5e27cb40-efb5-11ef-adac-9371f7c22665",
        "block_type_id": "a9949a1a-14e3-11eb-adc1-0242ac120002",
        "worksheet_id": "5e253330-efb5-11ef-adac-9371f7c22665",
        "created_at": "2025-02-19T14:50:15.405Z",
        "updated_at": "2025-02-20T18:06:12.027Z",
        "worksheetId": "5e253330-efb5-11ef-adac-9371f7c22665",
        "blockTypeId": "a9949a1a-14e3-11eb-adc1-0242ac120002"
      }
    ]
  },
  "vizMap": {
    "5ddd54c0-efb5-11ef-adac-9371f7c22665": [],
    "5de013e0-efb5-11ef-adac-9371f7c22665": [],
    "5de1c190-efb5-11ef-adac-9371f7c22665": [],
    "5de2d300-efb5-11ef-adac-9371f7c22665": [],
    "5de40b80-efb5-11ef-adac-9371f7c22665": [],
    "5de51cf0-efb5-11ef-adac-9371f7c22665": [],
    "5de62e60-efb5-11ef-adac-9371f7c22665": [],
    "5def5620-efb5-11ef-adac-9371f7c22665": [],
    "5df0b5b0-efb5-11ef-adac-9371f7c22665": [],
    "5df23c50-efb5-11ef-adac-9371f7c22665": [],
    "5df79380-efb5-11ef-adac-9371f7c22665": [],
    "5df8a4f0-efb5-11ef-adac-9371f7c22665": [],
    "5df9dd70-efb5-11ef-adac-9371f7c22665": [],
    "5dfaeee0-efb5-11ef-adac-9371f7c22665": [],
    "5dfc0050-efb5-11ef-adac-9371f7c22665": [],
    "5dfd38d0-efb5-11ef-adac-9371f7c22665": [],
    "5dfe4a40-efb5-11ef-adac-9371f7c22665": [],
    "5dff82c0-efb5-11ef-adac-9371f7c22665": [],
    "5e009430-efb5-11ef-adac-9371f7c22665": [],
    "5e01a5a0-efb5-11ef-adac-9371f7c22665": [],
    "5e0fd670-efb5-11ef-adac-9371f7c22665": [
      {
        "config": [
          {
            "table_schema": "",
            "table_name": "workbook_map_056c708b",
            "geometry_type": "wkt",
            "wkt": "WKT",
            "renderType": "raster",
            "fillColor": "ca2c92",
            "borderColor": "3700b3",
            "pointSize": 2,
            "lineWidth": 2,
            "center_longitude": -122.4398,
            "center_latitude": 47.8093,
            "zoom_level": 7.96,
            "opacity": 70,
            "title": "",
            "block_height": 535,
            "auto_refresh_interval": "",
            "basemap_style": "color",
            "overrides": ""
          }
        ],
        "id": "5e10e7e0-efb5-11ef-adac-9371f7c22665",
        "name": "Map Visualization",
        "description": "Description for map visualization",
        "block_id": "5e0fd670-efb5-11ef-adac-9371f7c22665",
        "visualization_type_id": "4728179b-cd50-4d44-8d70-9350d39fd07b",
        "created_at": "2025-02-12T18:25:22.057Z",
        "updated_at": "2025-02-20T18:06:11.806Z",
        "blockId": "5e0fd670-efb5-11ef-adac-9371f7c22665",
        "visualizationTypeId": "4728179b-cd50-4d44-8d70-9350d39fd07b"
      }
    ],
    "5e126e80-efb5-11ef-adac-9371f7c22665": [],
    "5e137ff0-efb5-11ef-adac-9371f7c22665": [],
    "5e149160-efb5-11ef-adac-9371f7c22665": [],
    "5e15a2d0-efb5-11ef-adac-9371f7c22665": [],
    "5e16db50-efb5-11ef-adac-9371f7c22665": [],
    "5e17ecc0-efb5-11ef-adac-9371f7c22665": [],
    "5e18fe30-efb5-11ef-adac-9371f7c22665": [],
    "5e1a5dc0-efb5-11ef-adac-9371f7c22665": [],
    "5e2692c0-efb5-11ef-adac-9371f7c22665": [],
    "5e27cb40-efb5-11ef-adac-9371f7c22665": [],
    "5e2903c0-efb5-11ef-adac-9371f7c22665": [],
    "5e2b26a0-efb5-11ef-adac-9371f7c22665": [
      {
        "config": [
          {
            "table_schema": "",
            "table_name": "workbook_map_847f6aa2",
            "geometry_type": "wkt",
            "renderType": "raster",
            "center_longitude": "-122.9059",
            "center_latitude": "47.8156",
            "zoom_level": "7.34",
            "opacity": 70,
            "title": "",
            "block_height": 535,
            "auto_refresh_interval": "",
            "basemap_style": "color",
            "overrides": "",
            "wkt": "WKT",
            "fillColor": "ca2c92",
            "borderColor": "3700b3",
            "pointSize": 2,
            "lineWidth": 2
          }
        ],
        "id": "5e2c3810-efb5-11ef-adac-9371f7c22665",
        "name": "Map Visualization",
        "description": "Description for map visualization",
        "block_id": "5e2b26a0-efb5-11ef-adac-9371f7c22665",
        "visualization_type_id": "4728179b-cd50-4d44-8d70-9350d39fd07b",
        "created_at": "2025-02-19T04:29:58.773Z",
        "updated_at": "2025-02-20T18:06:11.985Z",
        "blockId": "5e2b26a0-efb5-11ef-adac-9371f7c22665",
        "visualizationTypeId": "4728179b-cd50-4d44-8d70-9350d39fd07b"
      }
    ],
    "5e2d97a0-efb5-11ef-adac-9371f7c22665": []
  }
}
